--------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  -normalizedroot-/log/do/fake2.log
  log type:  text
 opened on:  -normalized-
.         display_run_specs
                  c(os) = -normalized-
               c(osdtl) = -normalized-
        c(machine_type) = -normalized-
           c(byteorder) = -normalized-
              c(flavor) = -normalized-
            c(hostname) = -normalized-
                 c(pwd) = "-normalizedroot-"
       c(stata_version) = -normalized-
          c(processors) = -normalized-
.         if ${testing} cd ../..
. }

. 
. clear_all //use all globals and passed in locals before this!

. *Could restore do_name from -log query-,-return list- and parse filename
. 
. *Roots should be include final slash so if blank we get relative paths
. global main_root "`c(pwd)'/"

. global testing_root "`c(pwd)'/temp/testing/"

. 
. get_config_value testing, global(testing) default(0) //re-get
get_config_value: testing=0

. if ${testing} cd temp/testing/

. 
. include "${main_root}code/proj_prefs.do" //needs $main_root

. *Preferences
. 
. * Usage: -include proj_prefs.do- //more/trace are local only. Can't -do ..-
. 
. version 12.1

. set matsize 10000

. set more off

. set linesize 140

. set scheme s2mono

. mata: mata set matafavor speed

. set matalnum on

. set varabbrev off

. set tracedepth 1

. 
. *Defaults
. set seed 1337

. set sortseed 123456 //undocumented. Makes normal sort stable

. global try_stata12 = 1

. if ("${testing}"=="") global testing = 0

. if ("${verbose}"=="") global verbose = 0

. 
. global main_root "`c(pwd)'/"

. if ${testing}{
.         pause on
.         set trace on
.         
.         *get the testing dir
.         global testing_root `: environment TESTING_ROOT'
.         if "$testing_root"=="" global testing_root "temp"
.         *make sure it's absolute
.         *cd $testing_root
.         *global testing_root `c(pwd)'
. }

. 
. if !${verbose}{
.         global qui "qui"
. }

. 
. * Machine-specific stuff from environment
. * Get stuff that isn't versioned (too big).
. *global unversioned_data "${main_root}/../../Data/" //specify this default
. if `"`: environment UNVERSIONED_DATA'"'!="" {
.         global unversioned_data `"`: environment UNVERSIONED_DATA'"'
. }

. 
. global defnumclusters = 2

. if "`: environment DEFNUMCLUSTERS'"!="" {
.         global defnumclusters = `: environment DEFNUMCLUSTERS'
. }

. 
. *All of the above env vars should be in one category
. global envvars_show ""

. global envvars_hide "UNVERSIONED_DATA DEFNUMCLUSTERS"

. 
. 
. 
. 
. * Content
. use ${main_root}data/clean/auto2.dta
(1978 Automobile Data)

. 
. wr_save_fig, name(auto_scatter) : twoway (scatter price mpg), ///
>         title("Scatter of price on mpg") note("Source: -sysuse auto-" "Produced: Stata")
(file fig/gph/auto_scatter.gph saved)

. 
. include ${main_root}code/proj_footer.do

. 
. * Footer
. log close
      name:  <unnamed>
       log:  -normalizedroot-/log/do/fake2.log
  log type:  text
 closed on:  -normalized-
--------------------------------------------------------------------------------------------------------------------------------------------
